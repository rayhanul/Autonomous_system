mdp


// Length of Street
const int N=6;

// pedestrian move probability
//const double pL;

//formula crash = ((p=1)&((a=N-1)|(h=N-1)))|(a=h);
formula action = go_action|stop_action;
formula action2 = go_action2|stop_action2;
formula action3 = go_action3|stop_action3;
formula action4 = go_action4|stop_action4;

module car
	s : [0..N] init 1;
	go_action : bool init false;
	stop_action: bool init false;
	[go] !action -> 1:(go_action'=true);
	[stop] !action -> 1:(stop_action'=true);
	[move] (s<N)&go_action -> (s'=s+1)&(go_action'=false);
	[move] (s<N)&stop_action -> (s'=s)&(stop_action'=false);
	[] (s=N) -> true;
endmodule

module car2
	s2 : [0..N] init 0;
	go_action2 : bool init false;
	stop_action2: bool init false;
	[go2] !action2 -> 1:(go_action2'=true);
	[stop2] !action2 -> 1:(stop_action2'=true);
	[move] (s2<N)&go_action2 -> (s2'=s2+1)&(go_action2'=false);
	[move] (s2<N)&stop_action2 -> (s2'=s2)&(stop_action2'=false);
	[] (s2=N) -> true;
endmodule


module car3
	s3 : [-1..N] init -1;
	go_action3 : bool init false;
	stop_action3: bool init false;
	[go3] !action3 -> 1:(go_action3'=true);
	[stop3] !action3 -> 1:(stop_action3'=true);
	[move] (s3<N)&go_action3 -> (s3'=s3+1)&(go_action3'=false);
	[move] (s3<N)&stop_action3 -> (s3'=s3)&(stop_action3'=false);
	[] (s3=N) -> true;
endmodule



module car4
	s4 : [-2..N] init -2;
	go_action4 : bool init false;
	stop_action4: bool init false;
	[go4] !action4 -> 1:(go_action4'=true);
	[stop4] !action4 -> 1:(stop_action4'=true);
	[move] (s4<N)&go_action4 -> (s4'=s4+1)&(go_action4'=false);
	[move] (s4<N)&stop_action4 -> (s4'=s4)&(stop_action4'=false);
	[] (s4=N) -> true;
endmodule



label "Goal" = (s=N)|(s2=N);

label "s0" = (s=0);
label "s1" = (s=1);
label "s2" = (s=2);
label "s3" = (s=3);
label "s4" = (s=4);
label "s5" = (s=5);
label "s6" = (s=6);

label "x0" = (s2=0);
label "x1" = (s2=1);
label "x2" = (s2=2);
label "x3" = (s2=3);
label "x4" = (s2=4);
label "x5" = (s2=5);
label "x6" = (s2=6);


label "y31" = (s3=-1);
label "y0" = (s3=0);
label "y1" = (s3=1);
label "y2" = (s3=2);
label "y3" = (s3=3);
label "y4" = (s3=4);
label "y5" = (s3=5);
label "y6" = (s3=6);

label "y40" = (s4=-2);
label "y41" = (s4=-1);
label "y42" = (s4=0);
label "y43" = (s4=1);
label "y44" = (s4=2);
label "y45" = (s4=3);
label "y46" = (s4=4);
label "y47" = (s4=5);
label "y48" = (s4=6);


//label "p0" = (s_p = 0);
//label "p1" = (s_p = 1);
//label "p2" = (s_p = 2);

label "go1" = go_action;
label "stop1" = stop_action;
label "go2" = go_action2;
label "stop2" = stop_action2;


label "g03"= go_action3;
label "stop3" = stop_action3;


label "g04"= go_action4;
label "stop4" = stop_action4;





