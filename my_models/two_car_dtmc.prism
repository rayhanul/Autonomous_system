dtmc

// Length of Street
const int N=6;

// pedestrian move probability
//const double pL;
//formula p_off = (s_p=0)|(s_p=2);
//formula p_on = (s_p=1);
formula crash = ((p=1)&((s=N-1)|(s2=N-1)))|(s=s2);
formula action = go_action|stop_action;
formula action2=go_action2|stop_action2;
formula carpol1 = c1_go1|c1_stop1;
formula carpol2 = c2_go2|c2_stop2;

module car
	s : [0..N] init 1;
	go_action : bool init false;
	stop_action: bool init false;
	assign_flag : bool init true;
	
	[assign] assign_flag -> (assign_flag'=false);
	[go] !action& !assign_flag -> 1:(go_action'=true);
	[stop] !action & !assign_flag -> 1:(stop_action'=true);
	[move] (s<N)&go_action -> (s'=s+1)&(go_action'=false)&(assign_flag'=true);
	[move] (s<N)&stop_action -> (s'=s)&(stop_action'=false)&(assign_flag'=true);
	[] (s=N) -> true;
endmodule

module car2
	s2 : [0..N] init 0;
	go_action2 : bool init false;
	stop_action2: bool init false;
	assign_flag2 : bool init true;
	
	[assign] assign_flag2 -> (assign_flag2'=false);
	[go2] !action2 & !assign_flag2 -> 1:(go_action2'=true);
	[stop2] !action2 & !assign_flag2 -> 1:(stop_action2'=true);
	[move] (s2<N)&go_action2 -> (s2'=s2+1)&(go_action2'=false)&(assign_flag2'=true);
	[move] (s2<N)&stop_action2 -> (s2'=s2)&(stop_action2'=false)&(assign_flag2'=true);
	[] (s2=N) -> true;
endmodule



module environment
 p: [0..3] init 0; 
 	 [move] (p=0) -> 0.65:(p'=1) + 1-0.65:(p'=0);
	[move] (p=1) -> 0.65/2:(p'=2)+0.65/2:(p'=0) + 1-0.65:(p'=1);
[move] (p=2) -> 0.65:(p'=1) + 1-0.65:(p'=2); 
endmodule
 label "p0" = (p = 0);
label "p1" = (p = 1); 
 label "p2" = (p = 2);

label "Goal" = (s=6)|(s2=6);

label "s0" = (s=0);
label "s1" = (s=1);
label "s2" = (s=2);
label "s3" = (s=3);
label "s4" = (s=4);
label "s5" = (s=5);
label "s6" = (s=6);

label "x0" = (s2=0);
label "x1" = (s2=1);
label "x2" = (s2=2);
label "x3" = (s2=3);
label "x4" = (s2=4);
label "x5" = (s2=5);
label "x6" = (s2=6);





label "go1" = go_action;
label "stop1" = stop_action;
label "go2" = go_action2;
label "stop2" = stop_action2;
module car1policy
	c1_go1 : bool init false;
	c1_stop1 : bool init false;

	[go] c1_go1 -> 1:(c1_go1'=false);
	[stop] c1_stop1 -> 1:(c1_stop1'=false);
	[assign] !carpol1 &(s=1) & (s2=0) & (p=0) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=2) & (s2=1) & (p=0) -> (c1_go1'=true);
	[assign] !carpol1 &(s=2) & (s2=1) & (p=1) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=2) & (s2=0) & (p=0) -> (c1_go1'=true);
	[assign] !carpol1 &(s=2) & (s2=0) & (p=1) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=1) & (s2=1) & (p=0) -> (c1_go1'=true);
	[assign] !carpol1 &(s=1) & (s2=1) & (p=1) -> (c1_go1'=true);
	[assign] !carpol1 &(s=1) & (s2=0) & (p=1) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=3) & (s2=2) & (p=0) -> (c1_go1'=true);
	[assign] !carpol1 &(s=3) & (s2=2) & (p=1) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=3) & (s2=1) & (p=0) -> (c1_go1'=true);
	[assign] !carpol1 &(s=3) & (s2=1) & (p=1) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=2) & (s2=2) & (p=0) -> (c1_go1'=true);
	[assign] !carpol1 &(s=2) & (s2=2) & (p=1) -> (c1_go1'=true);
	[assign] !carpol1 &(s=3) & (s2=2) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(s=3) & (s2=1) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(s=2) & (s2=2) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(s=2) & (s2=1) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(s=3) & (s2=0) & (p=0) -> (c1_go1'=true);
	[assign] !carpol1 &(s=3) & (s2=0) & (p=1) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=3) & (s2=0) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(s=2) & (s2=0) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(s=1) & (s2=2) & (p=0) -> (c1_go1'=true);
	[assign] !carpol1 &(s=1) & (s2=2) & (p=1) -> (c1_go1'=true);
	[assign] !carpol1 &(s=1) & (s2=2) & (p=2) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=1) & (s2=1) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(s=1) & (s2=0) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(s=4) & (s2=5) & (p=0) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=4) & (s2=5) & (p=2) -> (c1_stop1'=true);
<<<<<<< Updated upstream
	[assign] !carpol1 &(s=5) & (s2=5) & (p=0) -> (c1_go1'=true);
	[assign] !carpol1 &(s=5) & (s2=5) & (p=2) -> (c1_go1'=true);
=======
	[assign] !carpol1 &(s=3) & (s2=5) & (p=0) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=3) & (s2=5) & (p=2) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=2) & (s2=5) & (p=0) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=2) & (s2=5) & (p=2) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=1) & (s2=5) & (p=0) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=1) & (s2=5) & (p=2) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=4) & (s2=3) & (p=0) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=4) & (s2=3) & (p=1) -> (c1_go1'=true);
	[assign] !carpol1 &(s=4) & (s2=2) & (p=0) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=4) & (s2=2) & (p=1) -> (c1_go1'=true);
	[assign] !carpol1 &(s=3) & (s2=3) & (p=0) -> (c1_go1'=true);
	[assign] !carpol1 &(s=3) & (s2=3) & (p=1) -> (c1_go1'=true);
	[assign] !carpol1 &(s=4) & (s2=3) & (p=2) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=4) & (s2=2) & (p=2) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=3) & (s2=3) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(s=4) & (s2=1) & (p=0) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=4) & (s2=1) & (p=1) -> (c1_go1'=true);
	[assign] !carpol1 &(s=4) & (s2=1) & (p=2) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=2) & (s2=3) & (p=0) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=2) & (s2=3) & (p=1) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=2) & (s2=3) & (p=2) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=4) & (s2=0) & (p=0) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=4) & (s2=0) & (p=1) -> (c1_go1'=true);
	[assign] !carpol1 &(s=4) & (s2=0) & (p=2) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=1) & (s2=3) & (p=0) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=1) & (s2=3) & (p=1) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=1) & (s2=3) & (p=2) -> (c1_stop1'=true);
>>>>>>> Stashed changes
	[assign] !carpol1 &(s=5) & (s2=4) & (p=0) -> (c1_go1'=true);
	[assign] !carpol1 &(s=5) & (s2=3) & (p=0) -> (c1_go1'=true);
	[assign] !carpol1 &(s=4) & (s2=4) & (p=0) -> (c1_go1'=true);
	[assign] !carpol1 &(s=4) & (s2=4) & (p=1) -> (c1_go1'=true);
	[assign] !carpol1 &(s=5) & (s2=4) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(s=5) & (s2=3) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(s=4) & (s2=4) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(s=5) & (s2=2) & (p=0) -> (c1_go1'=true);
	[assign] !carpol1 &(s=5) & (s2=2) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(s=3) & (s2=4) & (p=0) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=3) & (s2=4) & (p=1) -> (c1_go1'=true);
	[assign] !carpol1 &(s=3) & (s2=4) & (p=2) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=5) & (s2=1) & (p=0) -> (c1_go1'=true);
	[assign] !carpol1 &(s=5) & (s2=1) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(s=2) & (s2=4) & (p=0) -> (c1_go1'=true);
	[assign] !carpol1 &(s=2) & (s2=4) & (p=1) -> (c1_go1'=true);
	[assign] !carpol1 &(s=2) & (s2=4) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(s=4) & (s2=3) & (p=0) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=4) & (s2=3) & (p=2) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=4) & (s2=2) & (p=0) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=4) & (s2=2) & (p=2) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=3) & (s2=3) & (p=0) -> (c1_go1'=true);
	[assign] !carpol1 &(s=3) & (s2=3) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(s=4) & (s2=1) & (p=0) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=4) & (s2=1) & (p=2) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=2) & (s2=3) & (p=0) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=2) & (s2=3) & (p=2) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=5) & (s2=0) & (p=0) -> (c1_go1'=true);
	[assign] !carpol1 &(s=5) & (s2=0) & (p=2) -> (c1_go1'=true);
<<<<<<< Updated upstream
	[assign] !carpol1 &(s=4) & (s2=0) & (p=0) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=4) & (s2=0) & (p=2) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=1) & (s2=4) & (p=0) -> (c1_go1'=true);
	[assign] !carpol1 &(s=1) & (s2=4) & (p=1) -> (c1_go1'=true);
	[assign] !carpol1 &(s=1) & (s2=4) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(s=1) & (s2=3) & (p=0) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=1) & (s2=3) & (p=2) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=1) & (s2=5) & (p=2) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=2) & (s2=5) & (p=2) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=3) & (s2=5) & (p=0) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=1) & (s2=5) & (p=0) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=3) & (s2=5) & (p=2) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=2) & (s2=5) & (p=0) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=4) & (s2=3) & (p=1) -> (c1_go1'=true);
	[assign] !carpol1 &(s=4) & (s2=2) & (p=1) -> (c1_go1'=true);
	[assign] !carpol1 &(s=3) & (s2=3) & (p=1) -> (c1_go1'=true);
	[assign] !carpol1 &(s=4) & (s2=1) & (p=1) -> (c1_go1'=true);
	[assign] !carpol1 &(s=2) & (s2=3) & (p=1) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=4) & (s2=0) & (p=1) -> (c1_go1'=true);
	[assign] !carpol1 &(s=1) & (s2=3) & (p=1) -> (c1_stop1'=true);
=======
	[assign] !carpol1 &(s=1) & (s2=4) & (p=0) -> (c1_stop1'=true);
	[assign] !carpol1 &(s=1) & (s2=4) & (p=1) -> (c1_go1'=true);
	[assign] !carpol1 &(s=1) & (s2=4) & (p=2) -> (c1_stop1'=true);
>>>>>>> Stashed changes
endmodule
module car2policy
	c2_go2 : bool init false;
	c2_stop2 : bool init false;

	[go2] c2_go2 -> 1:(c2_go2'=false);
	[stop2] c2_stop2 -> 1:(c2_stop2'=false);
	[assign] !carpol2 &(s=1) & (s2=0) & (p=0) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=2) & (s2=1) & (p=0) -> (c2_go2'=true);
	[assign] !carpol2 &(s=2) & (s2=1) & (p=1) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=2) & (s2=0) & (p=0) -> (c2_go2'=true);
	[assign] !carpol2 &(s=2) & (s2=0) & (p=1) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=1) & (s2=1) & (p=0) -> (c2_go2'=true);
	[assign] !carpol2 &(s=1) & (s2=1) & (p=1) -> (c2_go2'=true);
	[assign] !carpol2 &(s=1) & (s2=0) & (p=1) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=3) & (s2=2) & (p=0) -> (c2_go2'=true);
<<<<<<< Updated upstream
	[assign] !carpol2 &(s=3) & (s2=2) & (p=1) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=3) & (s2=1) & (p=0) -> (c2_go2'=true);
	[assign] !carpol2 &(s=3) & (s2=1) & (p=1) -> (c2_stop2'=true);
=======
	[assign] !carpol2 &(s=3) & (s2=2) & (p=1) -> (c2_go2'=true);
	[assign] !carpol2 &(s=3) & (s2=1) & (p=0) -> (c2_go2'=true);
	[assign] !carpol2 &(s=3) & (s2=1) & (p=1) -> (c2_go2'=true);
>>>>>>> Stashed changes
	[assign] !carpol2 &(s=2) & (s2=2) & (p=0) -> (c2_go2'=true);
	[assign] !carpol2 &(s=2) & (s2=2) & (p=1) -> (c2_go2'=true);
	[assign] !carpol2 &(s=3) & (s2=2) & (p=2) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=3) & (s2=1) & (p=2) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=2) & (s2=2) & (p=2) -> (c2_go2'=true);
<<<<<<< Updated upstream
	[assign] !carpol2 &(s=2) & (s2=1) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(s=3) & (s2=0) & (p=0) -> (c2_go2'=true);
	[assign] !carpol2 &(s=3) & (s2=0) & (p=1) -> (c2_stop2'=true);
=======
	[assign] !carpol2 &(s=2) & (s2=1) & (p=2) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=3) & (s2=0) & (p=0) -> (c2_go2'=true);
	[assign] !carpol2 &(s=3) & (s2=0) & (p=1) -> (c2_go2'=true);
>>>>>>> Stashed changes
	[assign] !carpol2 &(s=3) & (s2=0) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(s=2) & (s2=0) & (p=2) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=1) & (s2=2) & (p=0) -> (c2_go2'=true);
	[assign] !carpol2 &(s=1) & (s2=2) & (p=1) -> (c2_go2'=true);
<<<<<<< Updated upstream
	[assign] !carpol2 &(s=1) & (s2=2) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(s=1) & (s2=1) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(s=1) & (s2=0) & (p=2) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=4) & (s2=5) & (p=0) -> (c2_go2'=true);
	[assign] !carpol2 &(s=4) & (s2=5) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(s=5) & (s2=5) & (p=0) -> (c2_go2'=true);
	[assign] !carpol2 &(s=5) & (s2=5) & (p=2) -> (c2_go2'=true);
=======
	[assign] !carpol2 &(s=1) & (s2=2) & (p=2) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=1) & (s2=1) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(s=1) & (s2=0) & (p=2) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=4) & (s2=3) & (p=0) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=4) & (s2=3) & (p=1) -> (c2_go2'=true);
	[assign] !carpol2 &(s=4) & (s2=2) & (p=0) -> (c2_go2'=true);
	[assign] !carpol2 &(s=4) & (s2=2) & (p=1) -> (c2_go2'=true);
	[assign] !carpol2 &(s=3) & (s2=3) & (p=0) -> (c2_go2'=true);
	[assign] !carpol2 &(s=3) & (s2=3) & (p=1) -> (c2_go2'=true);
	[assign] !carpol2 &(s=4) & (s2=3) & (p=2) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=4) & (s2=2) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(s=3) & (s2=3) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(s=4) & (s2=1) & (p=0) -> (c2_go2'=true);
	[assign] !carpol2 &(s=4) & (s2=1) & (p=1) -> (c2_go2'=true);
	[assign] !carpol2 &(s=4) & (s2=1) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(s=2) & (s2=3) & (p=0) -> (c2_go2'=true);
	[assign] !carpol2 &(s=2) & (s2=3) & (p=1) -> (c2_go2'=true);
	[assign] !carpol2 &(s=2) & (s2=3) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(s=4) & (s2=0) & (p=0) -> (c2_go2'=true);
	[assign] !carpol2 &(s=4) & (s2=0) & (p=1) -> (c2_go2'=true);
	[assign] !carpol2 &(s=4) & (s2=0) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(s=1) & (s2=3) & (p=0) -> (c2_go2'=true);
	[assign] !carpol2 &(s=1) & (s2=3) & (p=1) -> (c2_go2'=true);
	[assign] !carpol2 &(s=1) & (s2=3) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(s=5) & (s2=5) & (p=0) -> (c2_go2'=true);
	[assign] !carpol2 &(s=5) & (s2=5) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(s=4) & (s2=5) & (p=0) -> (c2_go2'=true);
	[assign] !carpol2 &(s=4) & (s2=5) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(s=3) & (s2=5) & (p=0) -> (c2_go2'=true);
	[assign] !carpol2 &(s=3) & (s2=5) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(s=2) & (s2=5) & (p=0) -> (c2_go2'=true);
	[assign] !carpol2 &(s=2) & (s2=5) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(s=1) & (s2=5) & (p=0) -> (c2_go2'=true);
	[assign] !carpol2 &(s=1) & (s2=5) & (p=2) -> (c2_go2'=true);
>>>>>>> Stashed changes
	[assign] !carpol2 &(s=5) & (s2=4) & (p=0) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=5) & (s2=3) & (p=0) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=4) & (s2=4) & (p=0) -> (c2_go2'=true);
	[assign] !carpol2 &(s=4) & (s2=4) & (p=1) -> (c2_go2'=true);
	[assign] !carpol2 &(s=5) & (s2=4) & (p=2) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=5) & (s2=3) & (p=2) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=4) & (s2=4) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(s=5) & (s2=2) & (p=0) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=5) & (s2=2) & (p=2) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=3) & (s2=4) & (p=0) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=3) & (s2=4) & (p=1) -> (c2_go2'=true);
	[assign] !carpol2 &(s=3) & (s2=4) & (p=2) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=5) & (s2=1) & (p=0) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=5) & (s2=1) & (p=2) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=2) & (s2=4) & (p=0) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=2) & (s2=4) & (p=1) -> (c2_go2'=true);
	[assign] !carpol2 &(s=2) & (s2=4) & (p=2) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=4) & (s2=3) & (p=0) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=4) & (s2=3) & (p=2) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=4) & (s2=2) & (p=0) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=4) & (s2=2) & (p=2) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=3) & (s2=3) & (p=0) -> (c2_go2'=true);
	[assign] !carpol2 &(s=3) & (s2=3) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(s=4) & (s2=1) & (p=0) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=4) & (s2=1) & (p=2) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=2) & (s2=3) & (p=0) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=2) & (s2=3) & (p=2) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=5) & (s2=0) & (p=0) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=5) & (s2=0) & (p=2) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=4) & (s2=0) & (p=0) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=4) & (s2=0) & (p=2) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=1) & (s2=4) & (p=0) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=1) & (s2=4) & (p=1) -> (c2_go2'=true);
	[assign] !carpol2 &(s=1) & (s2=4) & (p=2) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=1) & (s2=3) & (p=0) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=1) & (s2=3) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(s=1) & (s2=5) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(s=2) & (s2=5) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(s=3) & (s2=5) & (p=0) -> (c2_go2'=true);
	[assign] !carpol2 &(s=1) & (s2=5) & (p=0) -> (c2_go2'=true);
	[assign] !carpol2 &(s=3) & (s2=5) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(s=2) & (s2=5) & (p=0) -> (c2_go2'=true);
	[assign] !carpol2 &(s=4) & (s2=3) & (p=1) -> (c2_go2'=true);
	[assign] !carpol2 &(s=4) & (s2=2) & (p=1) -> (c2_go2'=true);
	[assign] !carpol2 &(s=3) & (s2=3) & (p=1) -> (c2_go2'=true);
	[assign] !carpol2 &(s=4) & (s2=1) & (p=1) -> (c2_go2'=true);
	[assign] !carpol2 &(s=2) & (s2=3) & (p=1) -> (c2_stop2'=true);
	[assign] !carpol2 &(s=4) & (s2=0) & (p=1) -> (c2_go2'=true);
	[assign] !carpol2 &(s=1) & (s2=3) & (p=1) -> (c2_stop2'=true);
endmodule
