
dtmc 


// Length of Street
const int N=10;

formula action = go_action|stop_action;
formula action2=go_action2|stop_action2;
formula carpol1 = c1_go1|c1_stop1;
formula carpol2 = c2_go2|c2_stop2;
const double pL=.3;

module autonomous_car
	a : [1..N] init 1;
	go_action : bool init false;
	stop_action: bool init false;
    assign_flag : bool init true;

	[assign] assign_flag -> (assign_flag'=false);

	[go] !action& !assign_flag -> 1:(go_action'=true);
	[stop] !action & !assign_flag -> 1:(stop_action'=true);

	[move] (a=1)&go_action -> 0.9: (a'=3)&(go_action'=false) & (assign_flag'=true) + 0.1: (a'=1)&(go_action'=false) & (assign_flag'=true);
	[move] (a=1)&stop_action -> 0.9: (a'=1)&(stop_action'=false) & (assign_flag'=true)+  0.1: (a'=3)&(stop_action'=false) & (assign_flag'=true);

	[move] (a=3)&go_action -> 0.9: (a'=5)&(go_action'=false) & (assign_flag'=true) + 0.1: (a'=3)&(go_action'=false) & (assign_flag'=true);
	[move] (a=3)&stop_action -> 0.9: (a'=3)&(stop_action'=false) & (assign_flag'=true)+  0.1: (a'=5)&(stop_action'=false) & (assign_flag'=true);


	[move] (a=5)&go_action -> 0.9: (a'=7)&(go_action'=false) & (assign_flag'=true) + 0.1: (a'=5)&(go_action'=false) & (assign_flag'=true);
	[move] (a=5)&stop_action -> 0.9: (a'=5)&(stop_action'=false) & (assign_flag'=true)+  0.1: (a'=7)&(stop_action'=false) & (assign_flag'=true);

	[move] (a=7)&go_action -> 0.9: (a'=9)&(go_action'=false) & (assign_flag'=true)+ 0.1: (a'=7)&(go_action'=false) & (assign_flag'=true);
	[move] (a=7)&stop_action -> 0.9: (a'=7)&(stop_action'=false) & (assign_flag'=true)+  0.1: (a'=7)&(stop_action'=false) & (assign_flag'=true);

	[] (a=9) -> true;



endmodule

module human_car 
	h : [0..N] init 0;
	go_action2 : bool init false;
	stop_action2: bool init false;
	assign_flag2 : bool init true;

	[assign] assign_flag2 -> (assign_flag2'=false);
	[go2] !action2 & !assign_flag2 -> 1:(go_action2'=true);
	[stop2] !action2 & !assign_flag2 -> 1:(stop_action2'=true);


	[move] (h=0)&go_action2 -> 0.9: (h'=1)&(go_action2'=false) & (assign_flag2'=true)+ 0.1: (h'=0)&(go_action2'=false) & (assign_flag2'=true);
	[move] (h=0)&stop_action2 -> 0.9: (h'=0)&(stop_action2'=false) & (assign_flag2'=true)+  0.1: (h'=1)&(stop_action2'=false) & (assign_flag2'=true);

	[move] (h=1)&go_action2 -> 0.9: (h'=3)&(go_action2'=false) & (assign_flag2'=true) + 0.1: (h'=1)&(go_action2'=false) & (assign_flag2'=true);
	[move] (h=1)&stop_action -> 0.9: (h'=1)&(stop_action2'=false) & (assign_flag2'=true)+  0.1: (h'=3)&(stop_action2'=false) & (assign_flag2'=true);

	[move] (h=3)&go_action2 -> 0.9: (h'=5)&(go_action2'=false) & (assign_flag2'=true) + 0.1: (h'=3)&(go_action2'=false) & (assign_flag2'=true);
	[move] (h=3)&stop_action2 -> 0.9: (h'=3)&(stop_action2'=false) & (assign_flag2'=true)+  0.1: (h'=5)&(stop_action2'=false) & (assign_flag2'=true);


	[move] (h=5)&go_action2 -> 0.9: (h'=7)&(go_action2'=false) & (assign_flag2'=true) + 0.1: (h'=5)&(go_action2'=false) & (assign_flag2'=true);
	[move] (h=5)&stop_action2 -> 0.9: (h'=5)&(stop_action2'=false) & (assign_flag2'=true)+  0.1: (h'=7)&(stop_action2'=false) & (assign_flag2'=true);

	[move] (h=7)&go_action2 -> 0.9: (h'=9)&(go_action2'=false) & (assign_flag2'=true) + 0.1: (h'=7)&(go_action2'=false) & (assign_flag2'=true);
	[move] (h=7)&stop_action2 -> 0.9: (h'=7)&(stop_action2'=false) & (assign_flag2'=true)+  0.1: (h'=7)&(stop_action2'=false) & (assign_flag2'=true);

	[] (h=9) -> true;

endmodule


//module pedestrian
//	p : [2..N] init 2;
//	[move] (p=2) -> pL:(p'=3) + 1-pL:(p'=2);
//	[move] (p=3) -> pL/2:(p'=2)+pL/2:(p'=8) + 1-pL:(p'=3);
//	[move] (p=8) -> pL:(p'=3) + 1-pL:(p'=8); 


	//[move] (p=2) -> 1:(p'=3) ;
	//[move] (p=3) -> 1:(p'=8) ;
	//[move] (p=8) ->  1:(p'=8); 

	
	//[move] (p=2) -> 1: (p'=2);

//endmodule

module pedestrian 
 	 p : [2..10] init 2;	[move] (p=2) -> 0.7971416776682194:(p'=3)+0.20285832233178058:(p'=2);
	[move] (p=3) -> 0.3985708388341097:(p'=2)+0.20285832233178058:(p'=3)+0.3985708388341097:(p'=8);
	[move] (p=8) -> 0.20285832233178058:(p'=8)+0.7971416776682194:(p'=3);
endmodule



label "a1" = (a=1);
label "a3" = (a=3);
label "a5" = (a=5);
label "a7" = (a=7);
label "a9" = (a=9);

label "h0" = (h=0);
label "h1" = (h=1);
label "h3" = (h=3);
label "h5" = (h=5);
label "h7" = (h=7);
label "h9" = (h=9);

label "goal" = (a=9) | (h=9);

label "go1" = go_action;
label "stop1" = stop_action;
label "go2" = go_action2;
label "stop2" = stop_action2;

label "p2" = (p=2) ; 
label "p3" = (p=3) ; 
label "p4" = (p=4) ; 
label "p5" = (p=5) ; 
label "p6" = (p=6) ; 
label "p7" = (p=7) ; 
label "p8" = (p=8) ; module car1policy
	c1_go1 : bool init false;
	c1_stop1 : bool init false;

	[go] c1_go1 -> 1:(c1_go1'=false);
	[stop] c1_stop1 -> 1:(c1_stop1'=false);
	[assign] !carpol1 &(a=1) & (h=0) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(a=3) & (h=1) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(a=3) & (h=0) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(a=1) & (h=0) & (p=3) -> (c1_stop1'=true);
	[assign] !carpol1 &(a=5) & (h=1) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(a=5) & (h=1) & (p=3) -> (c1_go1'=true);
	[assign] !carpol1 &(a=5) & (h=3) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(a=5) & (h=3) & (p=3) -> (c1_go1'=true);
	[assign] !carpol1 &(a=3) & (h=1) & (p=8) -> (c1_go1'=true);
	[assign] !carpol1 &(a=5) & (h=1) & (p=8) -> (c1_go1'=true);
	[assign] !carpol1 &(a=5) & (h=3) & (p=8) -> (c1_go1'=true);
	[assign] !carpol1 &(a=1) & (h=3) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(a=1) & (h=3) & (p=3) -> (c1_go1'=true);
	[assign] !carpol1 &(a=1) & (h=3) & (p=8) -> (c1_go1'=true);
	[assign] !carpol1 &(a=7) & (h=0) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(a=7) & (h=0) & (p=3) -> (c1_go1'=true);
	[assign] !carpol1 &(a=7) & (h=0) & (p=8) -> (c1_go1'=true);
	[assign] !carpol1 &(a=5) & (h=0) & (p=8) -> (c1_go1'=true);
	[assign] !carpol1 &(a=3) & (h=0) & (p=8) -> (c1_go1'=true);
	[assign] !carpol1 &(a=5) & (h=0) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(a=5) & (h=0) & (p=3) -> (c1_go1'=true);
	[assign] !carpol1 &(a=1) & (h=0) & (p=8) -> (c1_stop1'=true);
	[assign] !carpol1 &(a=7) & (h=1) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(a=7) & (h=1) & (p=3) -> (c1_go1'=true);
	[assign] !carpol1 &(a=7) & (h=3) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(a=7) & (h=3) & (p=3) -> (c1_go1'=true);
	[assign] !carpol1 &(a=7) & (h=1) & (p=8) -> (c1_go1'=true);
	[assign] !carpol1 &(a=7) & (h=3) & (p=8) -> (c1_go1'=true);
	[assign] !carpol1 &(a=5) & (h=7) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(a=5) & (h=7) & (p=3) -> (c1_go1'=true);
	[assign] !carpol1 &(a=5) & (h=7) & (p=8) -> (c1_go1'=true);
	[assign] !carpol1 &(a=3) & (h=7) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(a=3) & (h=7) & (p=8) -> (c1_go1'=true);
	[assign] !carpol1 &(a=3) & (h=5) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(a=3) & (h=5) & (p=8) -> (c1_go1'=true);
	[assign] !carpol1 &(a=7) & (h=5) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(a=7) & (h=5) & (p=3) -> (c1_go1'=true);
	[assign] !carpol1 &(a=7) & (h=5) & (p=8) -> (c1_go1'=true);
	[assign] !carpol1 &(a=1) & (h=7) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(a=1) & (h=7) & (p=3) -> (c1_go1'=true);
	[assign] !carpol1 &(a=1) & (h=7) & (p=8) -> (c1_go1'=true);
	[assign] !carpol1 &(a=1) & (h=5) & (p=2) -> (c1_go1'=true);
	[assign] !carpol1 &(a=1) & (h=5) & (p=3) -> (c1_go1'=true);
	[assign] !carpol1 &(a=1) & (h=5) & (p=8) -> (c1_go1'=true);
endmodule
module car2policy
	c2_go2 : bool init false;
	c2_stop2 : bool init false;

	[go2] c2_go2 -> 1:(c2_go2'=false);
	[stop2] c2_stop2 -> 1:(c2_stop2'=false);
	[assign] !carpol2 &(a=1) & (h=0) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(a=3) & (h=1) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(a=3) & (h=0) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(a=1) & (h=0) & (p=3) -> (c2_stop2'=true);
	[assign] !carpol2 &(a=5) & (h=1) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(a=5) & (h=1) & (p=3) -> (c2_go2'=true);
	[assign] !carpol2 &(a=5) & (h=3) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(a=5) & (h=3) & (p=3) -> (c2_go2'=true);
	[assign] !carpol2 &(a=3) & (h=1) & (p=8) -> (c2_go2'=true);
	[assign] !carpol2 &(a=5) & (h=1) & (p=8) -> (c2_go2'=true);
	[assign] !carpol2 &(a=5) & (h=3) & (p=8) -> (c2_go2'=true);
	[assign] !carpol2 &(a=1) & (h=3) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(a=1) & (h=3) & (p=3) -> (c2_go2'=true);
	[assign] !carpol2 &(a=1) & (h=3) & (p=8) -> (c2_go2'=true);
	[assign] !carpol2 &(a=7) & (h=0) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(a=7) & (h=0) & (p=3) -> (c2_go2'=true);
	[assign] !carpol2 &(a=7) & (h=0) & (p=8) -> (c2_go2'=true);
	[assign] !carpol2 &(a=5) & (h=0) & (p=8) -> (c2_go2'=true);
	[assign] !carpol2 &(a=3) & (h=0) & (p=8) -> (c2_go2'=true);
	[assign] !carpol2 &(a=5) & (h=0) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(a=5) & (h=0) & (p=3) -> (c2_go2'=true);
	[assign] !carpol2 &(a=1) & (h=0) & (p=8) -> (c2_go2'=true);
	[assign] !carpol2 &(a=7) & (h=1) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(a=7) & (h=1) & (p=3) -> (c2_go2'=true);
	[assign] !carpol2 &(a=7) & (h=3) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(a=7) & (h=3) & (p=3) -> (c2_go2'=true);
	[assign] !carpol2 &(a=7) & (h=1) & (p=8) -> (c2_go2'=true);
	[assign] !carpol2 &(a=7) & (h=3) & (p=8) -> (c2_go2'=true);
	[assign] !carpol2 &(a=5) & (h=7) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(a=5) & (h=7) & (p=3) -> (c2_go2'=true);
	[assign] !carpol2 &(a=5) & (h=7) & (p=8) -> (c2_go2'=true);
	[assign] !carpol2 &(a=3) & (h=7) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(a=3) & (h=7) & (p=8) -> (c2_go2'=true);
	[assign] !carpol2 &(a=3) & (h=5) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(a=3) & (h=5) & (p=8) -> (c2_go2'=true);
	[assign] !carpol2 &(a=7) & (h=5) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(a=7) & (h=5) & (p=3) -> (c2_go2'=true);
	[assign] !carpol2 &(a=7) & (h=5) & (p=8) -> (c2_go2'=true);
	[assign] !carpol2 &(a=1) & (h=7) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(a=1) & (h=7) & (p=3) -> (c2_go2'=true);
	[assign] !carpol2 &(a=1) & (h=7) & (p=8) -> (c2_go2'=true);
	[assign] !carpol2 &(a=1) & (h=5) & (p=2) -> (c2_go2'=true);
	[assign] !carpol2 &(a=1) & (h=5) & (p=3) -> (c2_go2'=true);
	[assign] !carpol2 &(a=1) & (h=5) & (p=8) -> (c2_go2'=true);
endmodule
