

mdp


// Length of Street
const int N=6;

formula crash = ((a=h) | (a=p) | (h=p));
formula action = go_action|stop_action;
formula action2=go_action2|stop_action2;


module autonomous_car
	a : [1..N] init 1;
	go_action : bool init false;
	stop_action: bool init false;
	[go] !action -> 1:(go_action'=true);
	[stop] !action -> 1:(stop_action'=true);
	//[move] (a<N)&go_action -> (a'=a+1)&(go_action'=false);
	//[move] (a<N)&stop_action -> (a'=a)&(stop_action'=false);
	//[] (a=N) -> true;
	[move] a=1 ->  1 : (a'=2);
	[move] a=1 -> 1 : (a'=1);
	[move] a=2 ->  1 : (a'=3);
	[move] a=2 -> 1 : (a'=2);
	[move] a=3 ->  1 : (a'=4);
	[move] a=3 -> 1 : (a'=3);
	[move] a=4 ->  1 : (a'=5);
	[move] a=4 -> 1 : (a'=4);
	[move] a=5 ->  1 : (a'=6);
	[move] a=5 -> 1 : (a'=5);
	[move] a=6 ->  1 : (a'=6);
	[move] a=6 -> 1 : (a'=6);
endmodule

module human_car 
	h : [0..N] init 0;
	go_action2 : bool init false;
	stop_action2: bool init false;
	[go2] !action2 -> 1:(go_action2'=true);
	[stop2] !action2 -> 1:(stop_action2'=true);
//	[move] (h<N)&go_action2 -> (h'=h+1)&(go_action2'=false);
//	[move] (h<N)&stop_action2 -> (h'=h)&(stop_action2'=false);
//	[] (h=N) -> true;

	[go] h=0 ->  1 : (h'=1);
	[stop] h=0 -> 1 : (h'=0);
	[go] h=1 ->  1 : (h'=2);
	[stop] h=1 -> 1 : (h'=1);
	[go] h=2 ->  1 : (h'=3);
	[stop] h=2 -> 1 : (h'=2);
	[go] h=3 ->  1 : (h'=4);
	[stop] h=3 -> 1 : (h'=3);
	[go] h=4 ->  1 : (h'=5);
	[stop] h=4 -> 1 : (h'=4);
	[go] h=5 ->  1 : (h'=6);
	[stop] h=5 -> 1 : (h'=5);
	[go] h=6 ->  1 : (h'=6);
	[stop] h=6 -> 1 : (h'=6);

endmodule


label "a1" = a=1;
label "a2" = a=2;
label "a3" = a=3;
label "a4" = a=4;
label "a5" = a=5;
label "a6" = a=6;

label "h0" = h=0;
label "h1" = h=1;
label "h2" = h=2;
label "h3" = h=3;
label "h4" = h=4;
label "h5" = h=5;
label "h6" = h=6;

label "crash" = crash; 
label "goal" = a=6;

label "go1" = go_action;
label "stop1" = stop_action;
label "go2" = go_action2;
label "stop2" = stop_action2;





const int k =50; 
 module environment 
 p : [0..k] init 13;
 [move] (p=13) ->  0.3 : (p'=37) +0.35 : (p'=24) +0.35 : (p'=22) ; 
[move] (p=33) ->  1.0 : (p'=33) ; 
[move] (p=37) ->  1.0 : (p'=33) ; 
[move] (p=23) ->  1.0 : (p'=33) ; 
[move] (p=46) ->  1.0 : (p'=33) ; 
[move] (p=10) ->  0.54 : (p'=37) +0.31 : (p'=29) +0.15 : (p'=26) ; 
[move] (p=29) ->  0.48 : (p'=37) +0.32 : (p'=21) +0.2 : (p'=18) ; 
[move] (p=21) ->  0.42 : (p'=37) +0.33 : (p'=40) +0.25 : (p'=34) ; 
[move] (p=40) ->  0.36 : (p'=37) +0.34 : (p'=4) +0.3 : (p'=2) ; 
[move] (p=4) ->  0.35 : (p'=13) +0.3 : (p'=37) +0.35 : (p'=12) ; 
[move] (p=24) ->  0.18 : (p'=37) +0.37 : (p'=42) +0.45 : (p'=39) ; 
[move] (p=42) ->  0.12 : (p'=37) +0.38 : (p'=7) +0.5 : (p'=3) ; 
[move] (p=43) ->  0.54 : (p'=37) +0.31 : (p'=29) +0.15 : (p'=26) ; 
[move] (p=19) ->  0.54 : (p'=37) +0.31 : (p'=29) +0.15 : (p'=26) ; 
[move] (p=38) ->  0.54 : (p'=37) +0.31 : (p'=29) +0.15 : (p'=26) ; 
[move] (p=5) ->  0.54 : (p'=37) +0.31 : (p'=29) +0.15 : (p'=26) ; 
[move] (p=35) ->  0.54 : (p'=37) +0.31 : (p'=29) +0.15 : (p'=26) ; 
[move] (p=8) ->  0.54 : (p'=37) +0.31 : (p'=29) +0.15 : (p'=26) ; 
[move] (p=49) ->  0.54 : (p'=37) +0.31 : (p'=29) +0.15 : (p'=26) ; 
[move] (p=14) ->  0.54 : (p'=37) +0.31 : (p'=29) +0.15 : (p'=26) ; 
[move] (p=25) ->  0.54 : (p'=37) +0.31 : (p'=29) +0.15 : (p'=26) ; 
[move] (p=15) ->  0.54 : (p'=37) +0.31 : (p'=29) +0.15 : (p'=26) ; 
[move] (p=47) ->  0.54 : (p'=46) +0.15 : (p'=26) +0.31 : (p'=20) ; 
[move] (p=20) ->  0.48 : (p'=46) +0.2 : (p'=18) +0.32 : (p'=11) ; 
[move] (p=11) ->  0.42 : (p'=46) +0.25 : (p'=34) +0.33 : (p'=30) ; 
[move] (p=30) ->  0.36 : (p'=46) +0.3 : (p'=2) +0.34 : (p'=41) ; 
[move] (p=41) ->  0.3 : (p'=46) +0.35 : (p'=12) +0.35 : (p'=0) ; 
[move] (p=0) ->  0.3 : (p'=46) +0.35 : (p'=22) +0.35 : (p'=16) ; 
[move] (p=16) ->  0.18 : (p'=46) +0.45 : (p'=39) +0.37 : (p'=31) ; 
[move] (p=31) ->  0.12 : (p'=46) +0.5 : (p'=3) +0.38 : (p'=48) ; 
[move] (p=32) ->  0.54 : (p'=46) +0.15 : (p'=26) +0.31 : (p'=20) ; 
[move] (p=9) ->  0.54 : (p'=46) +0.15 : (p'=26) +0.31 : (p'=20) ; 
[move] (p=28) ->  0.54 : (p'=46) +0.15 : (p'=26) +0.31 : (p'=20) ; 
[move] (p=45) ->  0.54 : (p'=46) +0.15 : (p'=26) +0.31 : (p'=20) ; 
[move] (p=27) ->  0.54 : (p'=46) +0.15 : (p'=26) +0.31 : (p'=20) ; 
[move] (p=44) ->  0.54 : (p'=46) +0.15 : (p'=26) +0.31 : (p'=20) ; 
[move] (p=36) ->  0.54 : (p'=46) +0.15 : (p'=26) +0.31 : (p'=20) ; 
[move] (p=1) ->  0.54 : (p'=46) +0.15 : (p'=26) +0.31 : (p'=20) ; 
[move] (p=17) ->  0.54 : (p'=46) +0.15 : (p'=26) +0.31 : (p'=20) ; 
[move] (p=6) ->  0.54 : (p'=46) +0.15 : (p'=26) +0.31 : (p'=20) ; 
endmodule 
label "p9" = p=0|p=1|p=6|p=9|p=11|p=16|p=17|p=20|p=27|p=28|p=30|p=31|p=32|p=36|p=41|p=44|p=45|p=47|p=48 ; 
label "p8" = p=2|p=3|p=12|p=18|p=22|p=26|p=34|p=39 ; 
label "p7" = p=4|p=5|p=7|p=8|p=10|p=13|p=14|p=15|p=19|p=21|p=24|p=25|p=29|p=35|p=38|p=40|p=42|p=43|p=49 ; 
label "p4" = p=23 ; 
label "p10" = p=33 ; 
label "p3" = p=37 ; 
label "p5" = p=46 ; 

