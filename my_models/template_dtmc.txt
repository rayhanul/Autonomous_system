
dtmc 


// Length of Street
const int N=10;

//formula crash = ((a=h) | (a=p) | (h=p));
formula action = go_action|stop_action;
formula action2=go_action2|stop_action2;
formula carpol1 = c1_go1|c1_stop1;
//formula carpol2 = c2_go2|c2_stop2;
const double pL=.8;

module autonomous_car
	a : [1..N] init 1;
	go_action : bool init false;
	stop_action: bool init false;
    assign_flag : bool init true;

	[assign] assign_flag -> (assign_flag'=false);

	[go] !action& !assign_flag -> 1:(go_action'=true);
	[stop] !action & !assign_flag -> 1:(stop_action'=true);
    
	//[go] !action & !assign_flag -> 1:(go_action'=true) & (assign_flag'=true);
	//[stop] !action & !assign_flag -> 1:(stop_action'=true) & (assign_flag'=true);

	[move] (a=1)&go_action -> (a'=3)&(go_action'=false) & (assign_flag'=true);
	[move] (a=1)&stop_action -> (a'=1)&(stop_action'=false) & (assign_flag'=true);

	[move] (a=3)&go_action -> (a'=5)&(go_action'=false) & (assign_flag'=true);
	[move] (a=3)&stop_action -> (a'=3)&(stop_action'=false) & (assign_flag'=true);

	[move] (a=5)&go_action -> (a'=7)&(go_action'=false) & (assign_flag'=true);
	[move] (a=5)&stop_action -> (a'=5)&(stop_action'=false) & (assign_flag'=true);

	[move] (a=7)&go_action -> (a'=9)&(go_action'=false) & (assign_flag'=true);
	[move] (a=7)&stop_action -> (a'=7)&(stop_action'=false) & (assign_flag'=true);

	[] (a=9) -> true;

endmodule

module human_car 
	h : [0..N] init 0;
	go_action2 : bool init false;
	stop_action2: bool init false;
	assign_flag2 : bool init true;

	[assign] assign_flag2 -> (assign_flag2'=false);
	[go2] !action2 & !assign_flag2 -> 1:(go_action2'=true);
	[stop2] !action2 & !assign_flag2 -> 1:(stop_action2'=true);

	[move] (h=0)&go_action2 -> (h'=1)&(go_action2'=false) & (assign_flag2'=true);
	[move] (h=0)&stop_action2 -> (h'=0)&(stop_action2'=false) & (assign_flag2'=true);

	[move] (h=1)&go_action2 -> (h'=3)&(go_action2'=false) & (assign_flag2'=true);
	[move] (h=1)&stop_action2 -> (h'=1)&(stop_action2'=false) & (assign_flag2'=true);

	[move] (h=3)&go_action2 -> (h'=5)&(go_action2'=false) & (assign_flag2'=true);
	[move] (h=3)&stop_action2 -> (h'=3)&(stop_action2'=false) & (assign_flag2'=true);

	[move] (h=5)&go_action2 -> (h'=7)&(go_action2'=false) & (assign_flag2'=true);
	[move] (h=5)&stop_action2 -> (h'=5)&(stop_action2'=false) & (assign_flag2'=true);

	[move] (h=7)&go_action2 -> (h'=9)&(go_action2'=false) & (assign_flag2'=true);
	[move] (h=7)&stop_action2 -> (h'=7)&(stop_action2'=false) & (assign_flag2'=true);

	[] (h=9) -> true;

endmodule


module pedestrian
	p : [2..N] init 2;
	//[move] (p=2) -> pL:(p'=3) + 1-pL:(p'=2);
	//[move] (p=3) -> pL/2:(p'=2)+pL/2:(p'=8) + 1-pL:(p'=3);
	//[move] (p=8) -> pL:(p'=3) + 1-pL:(p'=8); 

	[move] (p=2) -> 1: (p'=2);

endmodule


label "a1" = (a=1);
label "a3" = (a=3);
label "a5" = (a=5);
label "a7" = (a=7);
label "a9" = (a=9);

label "h0" = (h=0);
label "h1" = (h=1);
label "h3" = (h=3);
label "h5" = (h=5);
label "h7" = (h=7);
label "h9" = (h=9);

//label "crash" = (crash=true); 
label "goal" = (a=9);

label "go1" = go_action;
label "stop1" = stop_action;
label "go2" = go_action2;
label "stop2" = stop_action2;

label "p2" = (p=2) ; 
label "p3" = (p=3) ; 
label "p4" = (p=4) ; 
label "p5" = (p=5) ; 
label "p6" = (p=6) ; 
label "p7" = (p=7) ; 
label "p8" = (p=8) ; 