mdp


// Length of Street
const int N=6;

// pedestrian move probability
const double pL;

formula action = go_action|stop_action;
formula action2 = go_action2|stop_action2;

module car
	a : [0..N] init 1;
	go_action : bool init false;
	stop_action: bool init false;
	[go] !action -> 1:(go_action'=true);
	[stop] !action -> 1:(stop_action'=true);
	[move] (a<N)&go_action -> (a'=a+1)&(go_action'=false);
	[move] (a<N)&stop_action -> (a'=a)&(stop_action'=false);
	[] (a=N) -> true;
endmodule

module car2
	h : [0..N] init 0;
	go_action2 : bool init false;
	stop_action2: bool init false;
	[go2] !action2 -> 1:(go_action2'=true);
	[stop2] !action2 -> 1:(stop_action2'=true);
	[move] (h<N)&go_action2 -> (h'=h+1)&(go_action2'=false);
	[move] (h<N)&stop_action2 -> (h'=h)&(stop_action2'=false);
	[] (h=N) -> true;
endmodule


const int k =6; 
 module environment 
 p : [0..2] init 0;
 [move] (p=0) ->  pL : (p'=1) +(1-pL) : (p'=0) ; 
[move] (p=1) ->  pL/2 : (p'=2) + (1-pL): (p'=1) +pL/2: (p'=0) ; 
[move] (p=2) ->  (1-pL) : (p'=2) +pL : (p'=1) ; 
endmodule 





label "goal" = (a=N)|(h=N);

label "a0" = (a=0);
label "a1" = (a=1);
label "a2" = (a=2);
label "a3" = (a=3);
label "a4" = (a=4);
label "a5" = (a=5);
label "a6" = (a=6);

label "h0" = (h=0);
label "h1" = (h=1);
label "h2" = (h=2);
label "h3" = (h=3);
label "h4" = (h=4);
label "h5" = (h=5);
label "h6" = (h=6);

label "p2"= (p=2);
label "p1"= (p=1);
label "p0"= (p=0);


label "go1" = go_action;
label "stop1" = stop_action;
label "go2" = go_action2;
label "stop2" = stop_action2;


//label "crash" = (crash=true);